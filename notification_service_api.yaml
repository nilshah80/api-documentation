openapi: 3.0.0
info:
  title: Notification Service API
  description: This API is designed to allow the management and delivery of notifications to users through various channels including WhatsApp, SMS, Email, and OTP. It also includes functionality for retrieving and managing notifications, updating their status, and checking the health and readiness of the service.
  version: 1.0.0

servers:
  - url: http://localhost:8081
    description: Development Server
  - url: https://api-staging.abcamc.com
    description: Staging Server
  - url: https://api.abcamc.com
    description: Production Server

paths:
  /api/v1/push-notifications:
    get:
      summary: Get User notifications
      operationId: getNotifications
      tags:
        - Notifications
      description: >
        Retrieves a list of notifications for a specified user. Notifications can be filtered by 
        status (READ, UNREAD, or ALL) and paginated. The response includes detailed 
        information about each notification along with pagination metadata.
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          description: ID of the user retrieving notifications
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [READ, UNREAD, ALL]
            default: ALL
          description: Filter notifications by status
      responses:
        "200":
          description: Successfully retrieved notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        message:
                          type: string
                        status:
                          type: string
                          enum: [READ, UNREAD]
                        createdAt:
                          type: string
                          format: date-time
                        type:
                          type: string
                          enum: [INFO, WARNING, ERROR, SUCCESS]
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalItems:
                        type: integer
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/push-notifications/{notificationId}/read:
    put:
      summary: Mark notification as Read
      operationId: markNotificationAsRead
      tags:
        - Notifications
      description: >
        Marks a specified notification as read. Once marked as read, it will no longer be part of the unread notifications.
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Notification marked as read
        "404":
          description: Notification not found
        "500":
          description: Internal server error
  /api/v1/notifications/whatsapp:
    post:
      summary: Send notification using Whatsapp
      operationId: sendWhatsappNotification
      tags:
        - Notifications
      description: >
        Sends a notification through WhatsApp, including dynamic template variables and optional attachments. Here _id resembles to templateId and additionalProps are just place holders which will be used to replace dynamic content from template. e.g: { "userName" : "ABC", "transactionAmount" : 5300 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateId
                - recipients
                - messageId
              properties:
                messageId:
                  type: string
                  description: Id for notification backtracking
                templateId:
                  type: string
                  description: Unique identifier for the notification request.
                sourceName:
                  type: string
                  description: The source from where the notification is triggered (optional).
                recipients:
                  type: array
                  items:
                    type: object
                    properties:
                      phone:
                        type: string
                        description: The phone number of the recipient. Required for SMS and WhatsApp notifications.
                      variables: 
                        type: object
                        additionalProperties:
                          type: string
                        description: Key-value pairs of dynamic template variables.
                      attachments:
                        type: array
                        items:
                          type: object
                          properties:
                            filename:
                              type: string
                              description: The name of the attachment file. Valid for email and other channels where attachments are allowed.
                            contentType:
                              type: string
                              description: The MIME type of the attachment (optional).
                            blobUrl:
                              type: string
                              description: The URL of the blob storage where the attachment is hosted.
                            blobName:
                              type: string
                              description: The name of the blob in the storage.
                            containerName:
                              type: string
                          description: A list of attachments, typically used for email or SMS channels where file sending is supported.
                  description: A list of recipients for the notification.
      responses:
        '200':
          description: Notification queued for sending.
        '400':
          description: Bad request.
        '404':
          description: Template not found.
        '500':
          description: Internal server error.
  /api/v1/notifications/sms:
    post:
      summary: Send notification using Sms
      operationId: sendSmsNotification
      tags:
        - Notifications
      description: >
        Sends a notification via SMS. Includes dynamic variables and allows for 
        sending to multiple recipients. Here _id resembles to templateId and additionalProps are just place holders which will be used to replace dynamic content from template. e.g: { "userName" : "ABC", "transactionAmount" : 5300 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageId
                - templateId
                - variables
                - recipients
              properties:
                messageId:
                  type: string
                  description: Id for notification backtracking
                templateId:
                  type: string
                  description: Unique identifier for the notification request.
                sourceName:
                  type: string
                  description: The source from where the notification is triggered (optional).
                recipients:
                  type: array
                  items:
                    type: object
                    properties:
                      phone:
                        type: string
                        description: The phone number of the recipient. Required for SMS and WhatsApp notifications.
                      variables: 
                        type: object
                        additionalProperties:
                          type: string
                        description: Key-value pairs of dynamic template variables.
                  description: A list of recipients for the notification.
      responses:
        '200':
          description: Notification queued for sending.
        '400':
          description: Bad request.
        '404':
          description: Template not found.
        '500':
          description: Internal server error.
  /api/v1/notifications/email:
    post:
      summary: Send notification using Email
      operationId: sendEmailNotification
      tags:
        - Notifications
      description: >
        Sends a notification via Email, including support for dynamic variables and optional file attachments. Here _id resembles to templateId and additionalProps are just place holders which will be used to replace dynamic content from template. e.g: { "userName" : "ABC", "transactionAmount" : 5300 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageId
                - templateId
                - recipients
              properties:
                messageId:
                  type: string
                  description: Id for notification backtracking
                templateId:
                  type: string
                  description: Unique identifier for the notification request.
                sourceName:
                  type: string
                  description: The source from where the notification is triggered (optional).
                recipients:
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: The email address of the recipient. Required for Email notifications.
                      cc:
                        type: string
                        description: The email address of the recipient. Required for Email notifications.
                      bcc:
                        type: string
                        description: The email address of the recipient. Required for Email notifications.
                      variables: 
                        type: object
                        additionalProperties:
                          type: string
                        description: Key-value pairs of dynamic template variables.
                      attachments:
                        type: array
                        items:
                          type: object
                          properties:
                            filename:
                              type: string
                              description: The name of the attachment file. Valid for email and other channels where attachments are allowed.
                            contentType:
                              type: string
                              description: The MIME type of the attachment (optional).
                            blobUrl:
                              type: string
                              description: The URL of the blob storage where the attachment is hosted.
                            blobName:
                              type: string
                              description: The name of the blob in the storage.
                            containerName:
                              type: string
                          description: A list of attachments, typically used for email or SMS channels where file sending is supported.
      responses:
        '200':
          description: Notification queued for sending.
        '400':
          description: Bad request.
        '404':
          description: Template not found.
        '500':
          description: Internal server error.
  /api/v1/notifications/otp:
    post:
      summary: Send notification for OTP
      operationId: sendOtpNotification
      tags:
        - Notifications
      description: >
        Sends a one-time password (OTP) notification through SMS, WhatsApp, or email. Here _id resembles to templateId and additionalProps are just place holders which will be used to replace dynamic content from template. e.g: { "userName" : "ABC", "OTP" : 5300 } 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageId
                - channels
                - recipients
              properties:
                messageId:
                  type: string
                  description: Id for notification backtracking
                channels:
                  type: object
                  properties:
                    smsTemplateId:
                      type: string
                    emailTemplateId:
                      type: string
                    whatsappTemplateId:
                      type: string
                  description: Unique identifier for the notification request.
                sourceName:
                  type: string
                  description: The source from where the notification is triggered (optional).
                recipients:
                  type: array
                  items:
                    type: object
                    properties:
                      phone:
                        type: string
                        description: The phone number of the recipient. Required for SMS and WhatsApp notifications.
                      variables: 
                        type: object
                        additionalProperties:
                          type: string
                        description: Key-value pairs of dynamic template variables.
                  description: A list of recipients for the notification.
                customerOptedforWhatsapp:
                  type: boolean
                  description: Indicates whether the customer opted in for WhatsApp notifications. If false, WhatsApp notifications will be ignored or rejected.
      responses:
        '202':
          description: Notification queued for sending.
        '400':
          description: Bad request.
        '404':
          description: Template not found.
        '500':
          description: Internal server error.
  /api/v1/notifications/healthz:
    get:
      summary: Check if the service is alive
      operationId: healthLiveness
      tags:
        - Notifications
      description: >
        Checks whether the Notification Service is alive and responding to requests.
        Useful for health checks in production environments.
      responses:
        "200":
            description: The service is healthy and running.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                      success:
                        type: boolean
                        example: true
        "500":
          description: Internal server error. The service is unhealthy and may need to be restarted.
  /api/v1/notifications/ready:
    get:
      summary: Check if the service is ready to receive traffic
      tags:
        - Notifications
      description: >
        Checks whether the Notification Service is ready to handle incoming requests.
        This ensures all necessary components, like the database and service bus, are operational.
      responses:
        "200":
          description: Service is ready to handle traffic.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: object
                    properties:
                      dbStatus:
                        type: string
                        example: operational
                      serviceBusStatus:
                        type: string
                        example: operational
                      redisStatus:
                        type: string
                        example: degraded
        "500":
          description: Internal server error
        "503":
          description: Service Unavailable The service is not ready to handle requests yet.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []